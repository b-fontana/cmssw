// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageDefinition.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MessageDefinition_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MessageDefinition_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MessageDefinition_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MessageDefinition_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MessageDefinition_2eproto;
namespace uncalibRecHitsProtocol {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
}  // namespace uncalibRecHitsProtocol
PROTOBUF_NAMESPACE_OPEN
template<> ::uncalibRecHitsProtocol::Data* Arena::CreateMaybeMessage<::uncalibRecHitsProtocol::Data>(Arena*);
template<> ::uncalibRecHitsProtocol::Event* Arena::CreateMaybeMessage<::uncalibRecHitsProtocol::Event>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace uncalibRecHitsProtocol {

// ===================================================================

class Event :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:uncalibRecHitsProtocol.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }
  inline void Swap(Event* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const final {
    return CreateMaybeMessage<Event>(nullptr);
  }

  Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Event>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "uncalibRecHitsProtocol.Event";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MessageDefinition_2eproto);
    return ::descriptor_table_MessageDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmplitudeFieldNumber = 1,
    kPedestalFieldNumber = 2,
    kJitterFieldNumber = 3,
    kChi2FieldNumber = 4,
    kOotamplitudeFieldNumber = 5,
    kOotchi2FieldNumber = 6,
    kFlagsFieldNumber = 7,
    kIdFieldNumber = 8,
  };
  // repeated float amplitude = 1;
  int amplitude_size() const;
  private:
  int _internal_amplitude_size() const;
  public:
  void clear_amplitude();
  private:
  float _internal_amplitude(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_amplitude() const;
  void _internal_add_amplitude(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_amplitude();
  public:
  float amplitude(int index) const;
  void set_amplitude(int index, float value);
  void add_amplitude(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      amplitude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_amplitude();

  // repeated float pedestal = 2;
  int pedestal_size() const;
  private:
  int _internal_pedestal_size() const;
  public:
  void clear_pedestal();
  private:
  float _internal_pedestal(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_pedestal() const;
  void _internal_add_pedestal(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_pedestal();
  public:
  float pedestal(int index) const;
  void set_pedestal(int index, float value);
  void add_pedestal(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      pedestal() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_pedestal();

  // repeated float jitter = 3;
  int jitter_size() const;
  private:
  int _internal_jitter_size() const;
  public:
  void clear_jitter();
  private:
  float _internal_jitter(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_jitter() const;
  void _internal_add_jitter(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_jitter();
  public:
  float jitter(int index) const;
  void set_jitter(int index, float value);
  void add_jitter(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      jitter() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_jitter();

  // repeated float chi2 = 4;
  int chi2_size() const;
  private:
  int _internal_chi2_size() const;
  public:
  void clear_chi2();
  private:
  float _internal_chi2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_chi2() const;
  void _internal_add_chi2(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_chi2();
  public:
  float chi2(int index) const;
  void set_chi2(int index, float value);
  void add_chi2(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      chi2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_chi2();

  // repeated float ootamplitude = 5;
  int ootamplitude_size() const;
  private:
  int _internal_ootamplitude_size() const;
  public:
  void clear_ootamplitude();
  private:
  float _internal_ootamplitude(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ootamplitude() const;
  void _internal_add_ootamplitude(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ootamplitude();
  public:
  float ootamplitude(int index) const;
  void set_ootamplitude(int index, float value);
  void add_ootamplitude(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ootamplitude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ootamplitude();

  // repeated float ootchi2 = 6;
  int ootchi2_size() const;
  private:
  int _internal_ootchi2_size() const;
  public:
  void clear_ootchi2();
  private:
  float _internal_ootchi2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ootchi2() const;
  void _internal_add_ootchi2(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ootchi2();
  public:
  float ootchi2(int index) const;
  void set_ootchi2(int index, float value);
  void add_ootchi2(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ootchi2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ootchi2();

  // repeated uint32 flags = 7;
  int flags_size() const;
  private:
  int _internal_flags_size() const;
  public:
  void clear_flags();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_flags() const;
  void _internal_add_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_flags();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 flags(int index) const;
  void set_flags(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      flags() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_flags();

  // repeated uint32 id = 8;
  int id_size() const;
  private:
  int _internal_id_size() const;
  public:
  void clear_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_id() const;
  void _internal_add_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 id(int index) const;
  void set_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:uncalibRecHitsProtocol.Event)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > amplitude_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > pedestal_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > jitter_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > chi2_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ootamplitude_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ootchi2_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > flags_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > id_;
  friend struct ::TableStruct_MessageDefinition_2eproto;
};
// -------------------------------------------------------------------

class Data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:uncalibRecHitsProtocol.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }
  inline void Swap(Data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(nullptr);
  }

  Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "uncalibRecHitsProtocol.Data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MessageDefinition_2eproto);
    return ::descriptor_table_MessageDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .uncalibRecHitsProtocol.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::uncalibRecHitsProtocol::Event* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::uncalibRecHitsProtocol::Event >*
      mutable_events();
  private:
  const ::uncalibRecHitsProtocol::Event& _internal_events(int index) const;
  ::uncalibRecHitsProtocol::Event* _internal_add_events();
  public:
  const ::uncalibRecHitsProtocol::Event& events(int index) const;
  ::uncalibRecHitsProtocol::Event* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::uncalibRecHitsProtocol::Event >&
      events() const;

  // @@protoc_insertion_point(class_scope:uncalibRecHitsProtocol.Data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::uncalibRecHitsProtocol::Event > events_;
  friend struct ::TableStruct_MessageDefinition_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Event

// repeated float amplitude = 1;
inline int Event::_internal_amplitude_size() const {
  return amplitude_.size();
}
inline int Event::amplitude_size() const {
  return _internal_amplitude_size();
}
inline void Event::clear_amplitude() {
  amplitude_.Clear();
}
inline float Event::_internal_amplitude(int index) const {
  return amplitude_.Get(index);
}
inline float Event::amplitude(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.amplitude)
  return _internal_amplitude(index);
}
inline void Event::set_amplitude(int index, float value) {
  amplitude_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.amplitude)
}
inline void Event::_internal_add_amplitude(float value) {
  amplitude_.Add(value);
}
inline void Event::add_amplitude(float value) {
  _internal_add_amplitude(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.amplitude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::_internal_amplitude() const {
  return amplitude_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::amplitude() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.amplitude)
  return _internal_amplitude();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::_internal_mutable_amplitude() {
  return &amplitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::mutable_amplitude() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.amplitude)
  return _internal_mutable_amplitude();
}

// repeated float pedestal = 2;
inline int Event::_internal_pedestal_size() const {
  return pedestal_.size();
}
inline int Event::pedestal_size() const {
  return _internal_pedestal_size();
}
inline void Event::clear_pedestal() {
  pedestal_.Clear();
}
inline float Event::_internal_pedestal(int index) const {
  return pedestal_.Get(index);
}
inline float Event::pedestal(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.pedestal)
  return _internal_pedestal(index);
}
inline void Event::set_pedestal(int index, float value) {
  pedestal_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.pedestal)
}
inline void Event::_internal_add_pedestal(float value) {
  pedestal_.Add(value);
}
inline void Event::add_pedestal(float value) {
  _internal_add_pedestal(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.pedestal)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::_internal_pedestal() const {
  return pedestal_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::pedestal() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.pedestal)
  return _internal_pedestal();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::_internal_mutable_pedestal() {
  return &pedestal_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::mutable_pedestal() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.pedestal)
  return _internal_mutable_pedestal();
}

// repeated float jitter = 3;
inline int Event::_internal_jitter_size() const {
  return jitter_.size();
}
inline int Event::jitter_size() const {
  return _internal_jitter_size();
}
inline void Event::clear_jitter() {
  jitter_.Clear();
}
inline float Event::_internal_jitter(int index) const {
  return jitter_.Get(index);
}
inline float Event::jitter(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.jitter)
  return _internal_jitter(index);
}
inline void Event::set_jitter(int index, float value) {
  jitter_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.jitter)
}
inline void Event::_internal_add_jitter(float value) {
  jitter_.Add(value);
}
inline void Event::add_jitter(float value) {
  _internal_add_jitter(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.jitter)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::_internal_jitter() const {
  return jitter_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::jitter() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.jitter)
  return _internal_jitter();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::_internal_mutable_jitter() {
  return &jitter_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::mutable_jitter() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.jitter)
  return _internal_mutable_jitter();
}

// repeated float chi2 = 4;
inline int Event::_internal_chi2_size() const {
  return chi2_.size();
}
inline int Event::chi2_size() const {
  return _internal_chi2_size();
}
inline void Event::clear_chi2() {
  chi2_.Clear();
}
inline float Event::_internal_chi2(int index) const {
  return chi2_.Get(index);
}
inline float Event::chi2(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.chi2)
  return _internal_chi2(index);
}
inline void Event::set_chi2(int index, float value) {
  chi2_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.chi2)
}
inline void Event::_internal_add_chi2(float value) {
  chi2_.Add(value);
}
inline void Event::add_chi2(float value) {
  _internal_add_chi2(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.chi2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::_internal_chi2() const {
  return chi2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::chi2() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.chi2)
  return _internal_chi2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::_internal_mutable_chi2() {
  return &chi2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::mutable_chi2() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.chi2)
  return _internal_mutable_chi2();
}

// repeated float ootamplitude = 5;
inline int Event::_internal_ootamplitude_size() const {
  return ootamplitude_.size();
}
inline int Event::ootamplitude_size() const {
  return _internal_ootamplitude_size();
}
inline void Event::clear_ootamplitude() {
  ootamplitude_.Clear();
}
inline float Event::_internal_ootamplitude(int index) const {
  return ootamplitude_.Get(index);
}
inline float Event::ootamplitude(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.ootamplitude)
  return _internal_ootamplitude(index);
}
inline void Event::set_ootamplitude(int index, float value) {
  ootamplitude_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.ootamplitude)
}
inline void Event::_internal_add_ootamplitude(float value) {
  ootamplitude_.Add(value);
}
inline void Event::add_ootamplitude(float value) {
  _internal_add_ootamplitude(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.ootamplitude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::_internal_ootamplitude() const {
  return ootamplitude_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::ootamplitude() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.ootamplitude)
  return _internal_ootamplitude();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::_internal_mutable_ootamplitude() {
  return &ootamplitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::mutable_ootamplitude() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.ootamplitude)
  return _internal_mutable_ootamplitude();
}

// repeated float ootchi2 = 6;
inline int Event::_internal_ootchi2_size() const {
  return ootchi2_.size();
}
inline int Event::ootchi2_size() const {
  return _internal_ootchi2_size();
}
inline void Event::clear_ootchi2() {
  ootchi2_.Clear();
}
inline float Event::_internal_ootchi2(int index) const {
  return ootchi2_.Get(index);
}
inline float Event::ootchi2(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.ootchi2)
  return _internal_ootchi2(index);
}
inline void Event::set_ootchi2(int index, float value) {
  ootchi2_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.ootchi2)
}
inline void Event::_internal_add_ootchi2(float value) {
  ootchi2_.Add(value);
}
inline void Event::add_ootchi2(float value) {
  _internal_add_ootchi2(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.ootchi2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::_internal_ootchi2() const {
  return ootchi2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Event::ootchi2() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.ootchi2)
  return _internal_ootchi2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::_internal_mutable_ootchi2() {
  return &ootchi2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Event::mutable_ootchi2() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.ootchi2)
  return _internal_mutable_ootchi2();
}

// repeated uint32 flags = 7;
inline int Event::_internal_flags_size() const {
  return flags_.size();
}
inline int Event::flags_size() const {
  return _internal_flags_size();
}
inline void Event::clear_flags() {
  flags_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Event::_internal_flags(int index) const {
  return flags_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Event::flags(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.flags)
  return _internal_flags(index);
}
inline void Event::set_flags(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.flags)
}
inline void Event::_internal_add_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  flags_.Add(value);
}
inline void Event::add_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_flags(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.flags)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Event::_internal_flags() const {
  return flags_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Event::flags() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.flags)
  return _internal_flags();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Event::_internal_mutable_flags() {
  return &flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Event::mutable_flags() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.flags)
  return _internal_mutable_flags();
}

// repeated uint32 id = 8;
inline int Event::_internal_id_size() const {
  return id_.size();
}
inline int Event::id_size() const {
  return _internal_id_size();
}
inline void Event::clear_id() {
  id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Event::_internal_id(int index) const {
  return id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Event::id(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Event.id)
  return _internal_id(index);
}
inline void Event::set_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:uncalibRecHitsProtocol.Event.id)
}
inline void Event::_internal_add_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  id_.Add(value);
}
inline void Event::add_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_id(value);
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Event.id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Event::_internal_id() const {
  return id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Event::id() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Event.id)
  return _internal_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Event::_internal_mutable_id() {
  return &id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Event::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Event.id)
  return _internal_mutable_id();
}

// -------------------------------------------------------------------

// Data

// repeated .uncalibRecHitsProtocol.Event events = 1;
inline int Data::_internal_events_size() const {
  return events_.size();
}
inline int Data::events_size() const {
  return _internal_events_size();
}
inline void Data::clear_events() {
  events_.Clear();
}
inline ::uncalibRecHitsProtocol::Event* Data::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:uncalibRecHitsProtocol.Data.events)
  return events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::uncalibRecHitsProtocol::Event >*
Data::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:uncalibRecHitsProtocol.Data.events)
  return &events_;
}
inline const ::uncalibRecHitsProtocol::Event& Data::_internal_events(int index) const {
  return events_.Get(index);
}
inline const ::uncalibRecHitsProtocol::Event& Data::events(int index) const {
  // @@protoc_insertion_point(field_get:uncalibRecHitsProtocol.Data.events)
  return _internal_events(index);
}
inline ::uncalibRecHitsProtocol::Event* Data::_internal_add_events() {
  return events_.Add();
}
inline ::uncalibRecHitsProtocol::Event* Data::add_events() {
  // @@protoc_insertion_point(field_add:uncalibRecHitsProtocol.Data.events)
  return _internal_add_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::uncalibRecHitsProtocol::Event >&
Data::events() const {
  // @@protoc_insertion_point(field_list:uncalibRecHitsProtocol.Data.events)
  return events_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace uncalibRecHitsProtocol

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MessageDefinition_2eproto
